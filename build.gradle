plugins {
    id 'java'
    id 'maven-publish'
    id "com.github.johnrengelman.shadow" version "8.1.1"
}

group = 'net.lapismc'
archivesBaseName = "LapisMine"
version = '0.1.0'
sourceCompatibility = '17'
targetCompatibility = '17'
defaultTasks 'clean', 'build', 'shadowJar'

repositories {
    mavenCentral()
    //Spigot repo
    maven {
        name = "spigotmc-repo"
        url = "https://hub.spigotmc.org/nexus/content/repositories/snapshots/"
    }
    //Personal Repo
    maven {
        name = "lapismc-repo"
        url = "https://maven.lapismc.net/repository/maven/"
    }
    //Pretty time
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
    //World Edit
    maven {
        name = "World Edit Repo"
        url = "https://maven.enginehub.org/repo/"
    }
    //Paper
    maven {
        name = "PaperMC Repo"
        url = uri("https://repo.papermc.io/repository/maven-public/")
    }
}

dependencies {
    implementation 'net.lapismc:LapisCore:1.12.13'
    compileOnly "org.spigotmc:spigot-api:1.20.4-R0.1-SNAPSHOT"
    compileOnly "com.sk89q.worldedit:worldedit-bukkit:7.2.9-SNAPSHOT"
}

shadowJar {
    archiveFileName.set(archivesBaseName + ".jar")
    exclude 'javax/**'
    relocate("org.ocpsoft.prettytime", "net.lapismc.lapismine.util.prettytime")
    relocate("net.lapismc.lapiscore", "net.lapismc.lapismine.util.core")
}

processResources {
    filter {
        it.replace('${project.version}', project.getVersion())
    }
}

javadoc {
    source = sourceSets.main.allJava
    include("net/lapismc/afkplus/api/*.java")
    include("net/lapismc/afkplus/playerdata/*.java")
}

task javadocJar(type: Jar) {
    archiveClassifier.set('javadoc')
    from javadoc
}

task sourcesJar(type: Jar) {
    archiveClassifier.set('sources')
    from sourceSets.main.allSource
}

artifacts {
    archives javadocJar, sourcesJar, shadowJar
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

java {
    withSourcesJar()
    withJavadocJar()
}
